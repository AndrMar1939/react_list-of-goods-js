{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","filters","initialFilter","active","isReversed","App","useState","activeFilter","setActiveFilter","isResetButtonVisible","handleSetSortFilter","filter","goodsForRender","cloneGoodsFromServer","sort","a","b","localeCompare","length","Error","reverse","getGoodsForRender","className","type","cn","onClick","map","good","nanoid","ReactDOM","render","document","getElementById"],"mappings":"wPAOaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACE,OADFA,EAEQ,aAFRA,EAGM,WAGNC,EAAgB,CACpBC,OAAQF,EACRG,YAAY,GA6BDC,EAAM,WACjB,MAAwCC,mBAASJ,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAuBF,EAAaJ,SAAWD,EAAcC,QAC9DI,EAAaH,aAAeF,EAAcE,WAEzCM,EAAsB,SAACC,GAC3BH,EAAgB,2BACXD,GADU,IAEbJ,OAAQQ,MAINC,EAvCkB,SAAC,GAA4B,IAA1BT,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAC7BS,EAAoB,UAAOb,GAEjC,OAAQG,GACN,KAAKF,EACH,MAEF,KAAKA,EACHY,EAAqBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACpD,MAEF,KAAKf,EACHY,EAAqBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACjD,MAEF,QACE,OAAO,IAAIC,MAAM,sBAOrB,OAJIf,GACFS,EAAqBO,UAGhBP,EAgBgBQ,CAAkBd,GASzC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,EAAaJ,SAAWF,IAEtCwB,QAAS,kBAAMf,EAAoBT,IALrC,iCAUA,wBACEsB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,EAAaJ,SAAWF,IAEtCwB,QAAS,kBAAMf,EAAoBT,IALrC,4BAUA,wBACEsB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAajB,EAAaH,aAE5BqB,QAnCqB,WAC3BjB,EAAgB,2BACXD,GADU,IAEbH,YAAaG,EAAaH,eA2BxB,qBAUCK,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMjB,EAAgBN,IAHjC,sBAUJ,6BACGU,EAAec,KAAI,SAAAC,GAAI,OACtB,oBACE,UAAQ,OADV,SAIGA,GAFIC,wBC5HjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c28ada20.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport { nanoid } from 'nanoid';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst filters = {\n  idle: 'idle',\n  byAlphabet: 'byAlphabet',\n  byLength: 'byLength',\n};\n\nconst initialFilter = {\n  active: filters.idle,\n  isReversed: false,\n};\n\nconst getGoodsForRender = ({ active, isReversed }) => {\n  const cloneGoodsFromServer = [...goodsFromServer];\n\n  switch (active) {\n    case filters.idle:\n      break;\n\n    case filters.byAlphabet:\n      cloneGoodsFromServer.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case filters.byLength:\n      cloneGoodsFromServer.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      return new Error('Switch case error!');\n  }\n\n  if (isReversed) {\n    cloneGoodsFromServer.reverse();\n  }\n\n  return cloneGoodsFromServer;\n};\n\nexport const App = () => {\n  const [activeFilter, setActiveFilter] = useState(initialFilter);\n\n  const isResetButtonVisible = activeFilter.active !== initialFilter.active\n    || activeFilter.isReversed !== initialFilter.isReversed;\n\n  const handleSetSortFilter = (filter) => {\n    setActiveFilter({\n      ...activeFilter,\n      active: filter,\n    });\n  };\n\n  const goodsForRender = getGoodsForRender(activeFilter);\n\n  const handleToggleReversed = () => {\n    setActiveFilter({\n      ...activeFilter,\n      isReversed: !activeFilter.isReversed,\n    });\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': activeFilter.active !== filters.byAlphabet,\n          })}\n          onClick={() => handleSetSortFilter(filters.byAlphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': activeFilter.active !== filters.byLength,\n          })}\n          onClick={() => handleSetSortFilter(filters.byLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !activeFilter.isReversed,\n          })}\n          onClick={handleToggleReversed}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setActiveFilter(initialFilter)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsForRender.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={nanoid()}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}